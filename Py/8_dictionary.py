# '辞書型'

d = {'x': 10, 'y': 20}
print(d)

print(type(d)) # <class 'dict'>

print(d['x']) # 10
print(d['y']) # 20

d['z'] = 200
print(d) # {'x': 10, 'y': 20, 'z': 200}

d.keys()
# dict_keys(['x', 'y'])

# 索引語だけとりだす---------------------------------------
# >>> d = {'x': 10, 'y': 20}
# >>> d.keys()
# dict_keys(['x', 'y'])

# update method ---------------------------------------------
# >>> d2 = {'x': 1000, 'j':200}
# >>> d.update(d2)
# >>> d
# {'x': 1000, 'y': 20, 'j': 200}


# 戻り値がないときはNoneTypeを返す--------------------------------------------------
# KeyError: 'z'
# >>> r = d.get('z')
# >>> r
# >>> type(r)
# <class 'NoneType'>
# getがない場合はNoneTypeを返す．

# popメソッド-----------------------------
# >>> d
# {'x': 1000, 'y': 20, 'j': 200}
# >>> d.pop('x')
# 1000
# >>> d
# {'y': 20, 'j': 200}

# del メソッド----------------------------
# ある要素だけ消したり
# >>> del d['y']
# >>> d
# {'j': 200}
# >>>

# まとめて消すことも
# {'j': 200}
# >>> del d
# >>> d
# Traceback (most recent call last):
#   File "<stdin>", line 1, in <module>
# NameError: name 'd' is not defined

# このようにして，索引があるか調べることも可能------------------------------------
# >>> d = {'x': 1000, 'y': 20, 'j': 200}
# >>> d
# {'x': 1000, 'y': 20, 'j': 200}
# >>> 'x' in d
# True
